{"version":3,"file":"static/js/234.9925fdac.chunk.js","mappings":"+NA2DA,UAnDyB,WAErB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACNC,MACD,IAEH,IAAMA,EAAQ,mCAAG,6GAESC,EAAAA,EAAAA,WAFT,OAEHC,EAFG,OAGTC,QAAQC,IAAR,OAAYF,QAAZ,IAAYA,OAAZ,EAAYA,EAAKL,MACjBC,EAAO,OAACI,QAAD,IAACA,OAAD,EAACA,EAAKL,MAJJ,gDAMTM,QAAQC,IAAR,MANS,yDAAH,qDAUd,OACI,iBAAKC,UAAU,gBAAf,WACI,gBAAKA,UAAU,cAAf,UACI,4BACI,eAAIA,UAAU,kBAAd,uBAGA,eAAIA,UAAU,6BAAd,qCAKR,iBAAKA,UAAU,OAAOC,MAAO,CAAEC,oBAAqB,MAAOC,uBAAwB,MAAOC,wBAAyB,MAAOC,qBAAsB,MAAOC,UAAW,sCAAuCC,OAAQ,oBAAqBC,gBAAiB,QAAvP,WACI,gBAAKP,MAAO,CAAEQ,QAAS,YAAaC,aAAc,gCAAlD,UACI,cAAGV,UAAU,MAAMC,MAAO,CAAEU,SAAU,OAAQC,WAAY,IAAKC,MAAO,QAAtE,8BAEJ,0BACI,UAAC,IAAD,CAAWC,MAAOtB,EAAMuB,WAAS,EAACC,iBAAiB,SAC/CC,kBAAkB,mFAClBC,0BAA0B,8CAA8CC,KAAM,GAAIC,mBAAoB,CAAC,GAAI,GAAI,IAFnH,WAGI,SAAC,IAAD,CAAQC,MAAM,OAAOC,OAAO,UAC5B,SAAC,IAAD,CAAQD,MAAM,cAAcC,OAAO,kBACnC,SAAC,IAAD,CAAQD,MAAM,QAAQC,OAAO,mBAC7B,SAAC,IAAD,CAAQC,KAAM,kBAAM,wCAAuBD,OAAO,aAClD,SAAC,IAAD,CAAQC,KAAM,SAACC,GAAD,OAAaC,GAAAA,CAAM,OAACD,QAAD,IAACA,OAAD,EAACA,EAASE,WAAWC,OAAO,gBAAiBL,OAAO,mBACrF,SAAC,IAAD,CAAQC,KAAM,SAACC,GAAD,OAAa,SAAC,IAAD,CAAaI,SAAS,EAAMC,SAAU,SAACC,QAAcR,OAAO,wB,kCChDzG1B,G,QAAe,CACjBD,SADiB,WAEb,OAAOoC,EAAAA,EAAAA,IAAQ,qBAEnBC,eAJiB,WAKb,OAAOD,EAAAA,EAAAA,IAAQ,4BAEnBE,cAPiB,SAOHzC,GACV,OAAOuC,EAAAA,EAAAA,KAAS,wBAAyBvC,IAE7C0C,YAViB,WAWb,OAAOH,EAAAA,EAAAA,IAAQ,wBAEnBI,eAbiB,SAaFC,GACX,OAAOL,EAAAA,EAAAA,IAAA,6BAA8BK,KAEzCC,YAhBiB,SAgBL7C,GACR,OAAOuC,EAAAA,EAAAA,IAAQ,sBAAuBvC,IAE1C8C,qBAnBiB,SAmBI9C,GACjB,OAAOuC,EAAAA,EAAAA,IAAQ,iCAAkCvC,MAIzD","sources":["Modules/Dashboard/Admin/SubscriptionList/SubscriptionList.js","Services/admin.service.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { DataTable } from 'primereact/datatable'\nimport { Column } from 'primereact/column';\nimport AdminService from '../../../../Services/admin.service';\nimport moment from 'moment'\nimport { InputSwitch } from 'primereact/inputswitch';\n\n\nconst SubscriptionList = () => {\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    const getUsers = async () => {\n        try {\n            const res = await AdminService.getUsers();\n            console.log(res?.data);\n            setData(res?.data);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className='container p-0'>\n            <div className=\"header-body\">\n                <div>\n                    <h6 className=\"header-pretitle\">\n                        Overview\n                    </h6>\n                    <h1 className=\"header-title text-truncate\">\n                        Subscription List\n                    </h1>\n                </div>\n            </div>\n            <div className='mt-6' style={{ borderTopLeftRadius: '7px', borderBottomLeftRadius: '7px', borderBottomRightRadius: '7px', borderTopRightRadius: '7px', boxShadow: '0 0.75rem 1.5rem rgb(18 38 63 / 3%)', border: '1px solid #edf2f9', backgroundColor: '#fff' }}>\n                <div style={{ padding: '12px 24px', borderBottom: '1px solid rgb(237, 242, 249)' }}>\n                    <p className='m-0' style={{ fontSize: '15px', fontWeight: 500, color: '#000' }}>Subscriptions</p>\n                </div>\n                <div>\n                    <DataTable value={data} paginator responsiveLayout=\"scroll\"\n                        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink\"\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\" rows={10} rowsPerPageOptions={[10, 20, 50]}>\n                        <Column field=\"name\" header=\"Name\" />\n                        <Column field=\"companyName\" header=\"Company Name\" />\n                        <Column field=\"email\" header=\"Email Address\" />\n                        <Column body={() => <span>Standard</span>} header=\"Package\" />\n                        <Column body={(dataRow) => moment(dataRow?.createdAt).format('DD MMM YYYY') } header=\"Subscribed On\" />\n                        <Column body={(dataRow) => <InputSwitch checked={true} onChange={(e) => {}} />} header=\"Action\"  />\n                    </DataTable>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SubscriptionList\n","import api from \"./api\";\nimport TokenService from \"./token.service\";\n\nconst AdminService = {\n    getUsers() {\n        return api.get(\"/admin/get-users\");\n    },\n    getUserActions() {\n        return api.get(\"/admin/get-user-actions\");\n    },\n    createPackage(data) {\n        return api.post(\"/admin/create-package\", data);\n    },\n    getPackages() {\n        return api.get(\"/admin/get-packages\");\n    },\n    getPackageById(id) {\n        return api.get(`/admin/get-package/${id}`);\n    },\n    editPackage(data) {\n        return api.put(\"/admin/edit-package\", data);\n    },\n    markPackageAsDefualt(data) {\n        return api.put(\"/admin/mark-package-as-default\", data);\n    },\n}\n\nexport default AdminService;"],"names":["useState","data","setData","useEffect","getUsers","AdminService","res","console","log","className","style","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","boxShadow","border","backgroundColor","padding","borderBottom","fontSize","fontWeight","color","value","paginator","responsiveLayout","paginatorTemplate","currentPageReportTemplate","rows","rowsPerPageOptions","field","header","body","dataRow","moment","createdAt","format","checked","onChange","e","api","getUserActions","createPackage","getPackages","getPackageById","id","editPackage","markPackageAsDefualt"],"sourceRoot":""}