{"version":3,"file":"static/js/258.13d82fb2.chunk.js","mappings":"iRA4KA,EAnKqB,WAAO,IAAD,QAEvB,GAAoEA,EAAAA,EAAAA,MAA5DC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAAUE,EAAvD,EAAuDA,SACvD,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAI,mCAAG,WAAOC,GAAP,sGAEaC,EAAAA,EAAAA,SAAqBD,GAFlC,OAECE,EAFD,OAGLP,GAASQ,EAAAA,EAAAA,KAAc,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKE,UAAW,KACpCP,EAAS,QAJJ,gDAMLQ,QAAQC,IAAR,MACgC,OAA5B,2CAAOC,gBAAP,eAAiBC,SACjBjB,EAAS,QAAS,CACdkB,QAAO,OAAC,EAAD,6BAAE,KAAOF,gBAAT,iBAAE,EAAiBP,YAAnB,aAAE,EAAuBS,SACjC,CACCC,aAAa,IAXhB,yDAAH,sDAiBV,OACI,gBAAKC,UAAU,2EAA2EC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAA1H,UACI,gBAAKH,UAAU,YAAf,UACI,iBAAKA,UAAU,yBAAf,WACI,gBAAKA,UAAU,kEAAf,UAEI,gBAAKA,UAAU,cAAf,UACI,gBAAKI,IAAI,0BAA0BC,IAAI,MAAML,UAAU,mBAI/D,iBAAKA,UAAU,2CAAf,WACI,cAAGA,UAAU,+CAA+CM,QAAS,kBAAMpB,EAAS,UAApF,UACI,gBAAKe,MAAO,CAAEC,MAAO,QAASK,UAAW,QAASC,UAAW,SAAUC,aAAc,QAAUL,IAAI,wBAAwBC,IAAI,WAEnI,eAAIL,UAAU,6BAAd,sBAIA,cAAGA,UAAU,8BAAb,wCAIA,kBAAMU,SAAUjC,EAAaW,GAAOuB,aAAa,MAAjD,WACI,iBAAKX,UAAU,aAAf,WACI,kBAAOA,UAAU,aAAjB,wBAGA,kCAAOY,KAAK,OAAOZ,UAAU,gBACrBxB,EAAS,OAAQ,CAAEqC,SAAU,oBADrC,IAEIC,YAAY,gBAEN,OAANpC,QAAM,IAANA,OAAA,EAAAA,EAAQqC,QACJ,kBAAOf,UAAU,wBAAjB,gBAA0CtB,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAQqC,YAAlD,aAA0C,EAAcjB,cAIpE,iBAAKE,UAAU,aAAf,WACI,kBAAOA,UAAU,aAAjB,2BAGA,kCAAOY,KAAK,QACJpC,EAAS,cAAe,CAAEqC,SAAU,oBAD5C,IAEIb,UAAU,eAAec,YAAY,mBAE/B,OAANpC,QAAM,IAANA,OAAA,EAAAA,EAAQsC,eACJ,kBAAOhB,UAAU,wBAAjB,gBAA0CtB,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAQsC,mBAAlD,aAA0C,EAAqBlB,cAM3E,iBAAKE,UAAU,aAAf,WAEI,kBAAOA,UAAU,aAAjB,8BAGA,kCAAOY,KAAK,OACJpC,EAAS,mBADjB,IAEIwB,UAAU,eAAec,YAAY,0BAI7C,iBAAKd,UAAU,aAAf,WAEI,kBAAOA,UAAU,aAAjB,4BAGA,kCAAOY,KAAK,QACJpC,EAAS,QAAS,CAClBqC,SAAU,iBAAkBI,QAAS,CACjCC,MAAO,wJACPpB,QAAS,oBAJrB,IAOIE,UAAU,eAAec,YAAY,uBAE/B,OAANpC,QAAM,IAANA,OAAA,EAAAA,EAAQyC,SACJ,kBAAOnB,UAAU,wBAAjB,gBAA0CtB,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAQyC,aAAlD,aAA0C,EAAerB,cAMrE,iBAAKE,UAAU,aAAf,WACI,gBAAKA,UAAU,MAAf,UACI,gBAAKA,UAAU,MAAf,UACI,kBAAOA,UAAU,aAAjB,2BAOR,iBAAKA,UAAU,gCAAf,WACI,oCACQxB,EAAS,WAAY,CAAEqC,SAAU,iBAAkBO,UAAW,CAAEF,MAAO,EAAGpB,QAAS,8CAD3F,IAEIE,UAAU,eAAeY,KAAM9B,EAAe,OAAS,WAAYgC,YAAY,0BAEnF,iBAAMd,UAAU,mBAAmBC,MAAO,CAAEoB,OAAQ,WAAaf,QAAS,kBAAMvB,GAAmBD,IAAnG,SAEQA,GACI,SAAC,MAAD,KAGA,SAAC,MAAD,UAON,OAANJ,QAAM,IAANA,OAAA,EAAAA,EAAQ4C,YACJ,kBAAOtB,UAAU,wBAAjB,gBAA0CtB,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAQ4C,gBAAlD,aAA0C,EAAkBxB,cAKxE,mBAAQE,UAAU,oCAAoCY,KAAK,SAA3D,sBAIA,gBAAKZ,UAAU,cAAf,UACI,mBAAOA,UAAU,yBAAjB,uCAC6B,cAAGM,QAAS,kBAAMpB,EAAS,gBAChDe,MAAO,CAAEsB,eAAgB,YAAaC,WAAY,IAAKH,OAAQ,WAD1C,mBAD7B,wB,6CC1J1B/B,EAAc,CAClBmC,MADkB,SACZpC,GACJ,OAAOqC,EAAAA,EAAAA,KACC,cAAerC,GACpBsC,MAAK,SAAA/B,GAIJ,OAHIA,EAASP,KAAKuC,QAChBC,EAAAA,EAAAA,QAAqBjC,EAASP,KAAKuC,QAE9BhC,EAASP,SAItByC,OAZkB,WAahBD,EAAAA,EAAAA,cAGFrD,SAhBkB,SAgBTa,GACP,OAAOqC,EAAAA,EAAAA,KAAS,iBAAkBrC,GAC/BsC,MAAK,SAAA/B,GAIJ,OAHIA,EAASP,KAAKuC,QAChBC,EAAAA,EAAAA,QAAqBjC,EAASP,KAAKuC,QAE9BhC,EAASP,UAKxB","sources":["Modules/Dashboard/Auth/SignupScreen/SignupScreen.js","Services/auth.service.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './SignupScreen.css';\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from 'react-redux';\nimport AuthService from '../../../../Services/auth.service';\nimport { addActions } from '../../../../Store/features/user.slice';\n\nconst SignupScreen = () => {\n\n    const { register, handleSubmit, formState: { errors }, setError } = useForm();\n    const [showPassword, setToShowPassword] = useState(false);\n    const dispatch = useDispatch();\n\n    const navigate = useNavigate();\n\n    const save = async (data) => {\n        try {\n            const res = await AuthService.register(data);\n            dispatch(addActions(res?.actions || []));\n            navigate('/app');\n        } catch (error) {\n            console.log(error);\n            if (error?.response?.status === 400) {\n                setError('email', {\n                    message: error?.response?.data?.message\n                }, {\n                    shouldFocus: true\n                })\n            }\n        }\n    }\n\n    return (\n        <div className=\"d-flex align-items-center bg-auth border-top border-top-2 border-primary\" style={{ width: '100%', height: '100vh' }}>\n            <div className=\"container\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col-12 col-md-6 offset-xl-2 offset-md-1 order-md-2 mb-5 mb-md-0\">\n\n                        <div className=\"text-center\">\n                            <img src='/assets/img/4826435.jpg' alt=\"...\" className=\"img-fluid\" />\n                        </div>\n\n                    </div>\n                    <div className=\"col-12 col-md-5 col-xl-4 order-md-1 my-5\">\n                        <a className=\"masthead-brand d-flex justify-content-center\" onClick={() => navigate('/home')}>\n                            <img style={{ width: '270px', marginTop: '-15px', textAlign: 'center', marginBottom: '50px' }} src=\"/assets/img/logo.jpeg\" alt=\"ptc\" />\n                        </a>\n                        <h1 className=\"display-4 text-center mb-3\">\n                            Sign up\n                        </h1>\n\n                        <p className=\"text-muted text-center mb-5\">\n                            Access to your dashboard.\n                        </p>\n\n                        <form onSubmit={handleSubmit(save)} autoComplete='off'>\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">\n                                    Your Name\n                                </label>\n                                <input type=\"text\" className=\"form-control\"\n                                    {...register(\"name\", { required: 'Required Input' })}\n                                    placeholder=\"Your Name\" />\n                                {\n                                    errors?.name && (\n                                        <small className='text-danger mt-3 ms-3'>{errors?.name?.message}</small>\n                                    )\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">\n                                    Company Name\n                                </label>\n                                <input type=\"text\"\n                                    {...register(\"companyName\", { required: 'Required Input' })}\n                                    className=\"form-control\" placeholder=\"Company Name\" />\n                                {\n                                    errors?.companyName && (\n                                        <small className='text-danger mt-3 ms-3'>{errors?.companyName?.message}</small>\n                                    )\n                                }\n                            </div>\n\n\n                            <div className=\"form-group\">\n\n                                <label className=\"form-label\">\n                                    Company Website\n                                </label>\n                                <input type=\"url\"\n                                    {...register(\"companyWebsite\")}\n                                    className=\"form-control\" placeholder=\"name@address.com\" />\n\n                            </div>\n\n                            <div className=\"form-group\">\n\n                                <label className=\"form-label\">\n                                    Email Address\n                                </label>\n                                <input type=\"text\"\n                                    {...register(\"email\", {\n                                        required: 'Required Input', pattern: {\n                                            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                            message: 'Invalid Email'\n                                        }\n                                    })}\n                                    className=\"form-control\" placeholder=\"name@address.com\" />\n                                {\n                                    errors?.email && (\n                                        <small className='text-danger mt-3 ms-3'>{errors?.email?.message}</small>\n                                    )\n                                }\n\n                            </div>\n\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <label className=\"form-label\">\n                                            Password\n                                        </label>\n\n                                    </div>\n                                </div>\n\n                                <div className=\"input-group input-group-merge\">\n                                    <input\n                                        {...register(\"password\", { required: 'Required Input', minLength: { value: 8, message: 'Minimum length of 8 characters required' } })}\n                                        className=\"form-control\" type={showPassword ? 'text' : 'password'} placeholder=\"Enter your password\" />\n\n                                    <span className=\"input-group-text\" style={{ cursor: 'pointer' }} onClick={() => setToShowPassword(!showPassword)}>\n                                        {\n                                            showPassword ? (\n                                                <FaEyeSlash />\n                                            ) : (\n\n                                                <FaEye />\n                                            )\n                                        }\n                                    </span>\n\n                                </div>\n                                {\n                                    errors?.password && (\n                                        <small className='text-danger mt-3 ms-3'>{errors?.password?.message}</small>\n                                    )\n                                }\n                            </div>\n\n                            <button className=\"btn btn-lg w-100 btn-primary mb-3\" type='submit'>\n                                Sign up\n                            </button>\n\n                            <div className=\"text-center\">\n                                <small className=\"text-muted text-center\">\n                                    Already have an account? <a onClick={() => navigate('/auth/login')}\n                                        style={{ textDecoration: 'underline', fontWeight: 600, cursor: 'pointer' }}>Login</a>.\n                                </small>\n                            </div>\n\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignupScreen\n","import api from \"./api\";\nimport TokenService from \"./token.service\";\n\nconst AuthService = {\n  login(data) {\n    return api\n      .post(\"/auth/login\", data)\n      .then(response => {\n        if (response.data.tokens) {\n          TokenService.setUser(response.data.tokens);\n        }\n        return response.data;\n      });\n  },\n\n  logout() {\n    TokenService.removeUser();\n  },\n\n  register(data) {\n    return api.post(\"/auth/register\", data)\n      .then(response => {\n        if (response.data.tokens) {\n          TokenService.setUser(response.data.tokens);\n        }\n        return response.data;\n      });\n  }\n}\n\nexport default AuthService;"],"names":["useForm","register","handleSubmit","errors","formState","setError","useState","showPassword","setToShowPassword","dispatch","useDispatch","navigate","useNavigate","save","data","AuthService","res","addActions","actions","console","log","response","status","message","shouldFocus","className","style","width","height","src","alt","onClick","marginTop","textAlign","marginBottom","onSubmit","autoComplete","type","required","placeholder","name","companyName","pattern","value","email","minLength","cursor","password","textDecoration","fontWeight","login","api","then","tokens","TokenService","logout"],"sourceRoot":""}