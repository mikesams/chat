{"version":3,"file":"static/js/511.74e72ef0.chunk.js","mappings":"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","sources":["Modules/Dashboard/User/Chat/ChatContent/ChatContent.js","Modules/Dashboard/User/Chat/ChatMembers/ChatMembers.js","Modules/Dashboard/User/Chat/Chat.js"],"sourcesContent":["import 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\nimport React, { useEffect, useState } from 'react'\nimport { BsEmojiSmile, BsThreeDotsVertical } from 'react-icons/bs'\nimport { FiPaperclip, FiPlusCircle, FiSend } from 'react-icons/fi'\nimport './ChatContent.css'\nimport moment from 'moment';\n\nconst ChatContent = ({ activeUser, sendMessage, message, setMessage }) => {\n    const [showActions, setshowActions] = useState(false);\n    const [showEmojis, setShowEmojis] = useState(false);\n\n    useEffect(() => {\n        // window.addEventListener('click', (event) => {\n        //     if(showEmojis) {\n        //         setShowEmojis(false);\n        //     }\n        // })\n    }, []);\n\n    const addEmoji = (emoji) => {\n        if (\"native\" in emoji) {\n          setMessage(`${message}${emoji.native}`);\n          setShowEmojis(false);\n        }\n      };\n\n    return (\n        <main className=\"main is-visible\" data-dropzone-area=\"\" style={{\n            height: 'calc(100vh - 40px)'\n        }}>\n            <div className=\"container h-100\">\n\n                <div className=\"d-flex flex-column h-100 position-relative\">\n                    <div className=\"chat-header py-4 py-lg-7\" style={{\n                        borderBottom: '1px solid #ddd'\n                    }}>\n                        <div className=\"row align-items-center\">\n\n                            <div className=\"col-2 d-xl-none\">\n                                <a className=\"icon icon-lg text-muted\" data-toggle-chat=\"\">\n                                </a>\n                            </div>\n\n                            <div className=\"col-8 col-xl-12\">\n                                <div className=\"row align-items-center text-center text-xl-start\">\n\n                                    <div className=\"col-12 col-xl-6\">\n                                        <div className=\"row align-items-center gx-5\">\n                                            <div className=\"col-auto\">\n                                                <div className=\"avatar avatar-online\">\n                                                    <span className=\"avatar-text bg-primary\">J</span>\n\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col overflow-hidden\">\n                                                <h5 className=\"text-truncate\">{activeUser?.user?.name}</h5>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div className=\"col-2 d-xl-none text-end\">\n                                <a className=\"icon icon-lg text-muted\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvas-more\" aria-controls=\"offcanvas-more\">\n                                </a>\n                            </div>\n\n                        </div>\n                    </div>\n\n\n                    <div className=\"chat-body hide-scrollbar flex-1 h-100\">\n                        <div className=\"chat-body-inner\" style={{ paddingBottom: '87px' }}>\n                            <div className=\"py-6 py-lg-12\">\n                                {\n                                    activeUser?.messages?.length > 0 && (\n                                        activeUser?.messages?.map(q => q?.from === activeUser?.user?._id ? (\n                                            <div className=\"message\">\n                                                <a data-bs-toggle=\"modal\" data-bs-target=\"#modal-user-profile\" className=\"avatar avatar-responsive\">\n                                                    <img className=\"avatar-img\" src=\"assets/img/avatars/2.jpg\" alt=\"\" />\n                                                </a>\n\n                                                <div className=\"message-inner\">\n                                                    <div className=\"message-body\">\n                                                        <div className=\"message-content\">\n                                                            <div className=\"message-text\">\n                                                                <p>{q?.message}</p>\n                                                            </div>\n\n\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"message-footer\">\n                                                        <span className=\"extra-small text-muted\">{moment(q?.date).fromNow()}</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ) : (<div className=\"message message-out\">\n                                            <a data-bs-toggle=\"modal\" data-bs-target=\"#modal-profile\" className=\"avatar avatar-responsive\">\n                                                <img className=\"avatar-img\" src=\"assets/img/avatars/1.jpg\" alt=\"\" />\n                                            </a>\n\n                                            <div className=\"message-inner\">\n                                                <div className=\"message-body\">\n\n                                                    <div className=\"message-content\">\n                                                        <div className=\"message-text\">\n                                                            <p>{q?.message}</p>\n                                                        </div>\n\n\n                                                    </div>\n\n                                                </div>\n\n                                                <div className=\"message-footer\">\n                                                    <span className=\"extra-small text-muted\">{moment(q?.date).fromNow()}</span>\n                                                </div>\n                                            </div>\n                                        </div>))\n                                    )\n                                }\n                                {/* <div className=\"message-divider\">\n                                    <small className=\"text-muted\">Monday, Sep 16</small>\n                                </div> */}\n\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                    <div className=\"chat-footer pb-3 pb-lg-7 position-absolute bottom-0 start-0\">\n\n                        <div className=\"dz-preview bg-dark\" id=\"dz-preview-row\" data-horizontal-scroll=\"\">\n                        </div>\n\n\n\n                        <form className=\"chat-form rounded-pill bg-dark\" data-emoji-form=\"\">\n                            <div className=\"row align-items-center gx-0\">\n                                <div className=\"col-auto\">\n                                    <a className=\"btn btn-icon text-body rounded-circle dz-clickable\" id=\"dz-btn\">\n                                        <FiPaperclip />\n                                    </a>\n                                </div>\n\n                                <div className=\"col\">\n                                    <div className=\"input-group\">\n                                        <textarea className=\"form-control px-0\"\n                                        style={{\n                                            background: 'transparent',\n                                            border: 'none'\n                                        }} placeholder=\"Type your message...\" rows=\"1\"\n                                         onChange={(e) => setMessage(e?.target?.value)}\n                                         onKeyPress={(event) => {\n                                           if (event.key === 'Enter') {\n                                             // setData([...data, {\n                                             //     msg: inputMessage,\n                                             //     time: Date.now()\n                                             // }]);\n                                             sendMessage()\n                                           }\n                                         }}\n                                         value={message} \n                                        ></textarea>\n\n                                        <a className=\"text-body pe-0 d-flex align-items-center emoji-section-icon\" style={{ position: 'relative' }}>\n                                            <BsEmojiSmile style={{ fontSize: 20 }} onClick={() => setShowEmojis(!showEmojis)} />\n                                            {\n                                                showEmojis && (\n                                                    <Picker title=\"Plug To Chat\" emoji=\"\" native={true} onSelect={addEmoji} style={{ position: 'absolute', bottom: '35px', right: 0, zIndex: 9999 }} />\n                                                )\n                                            }\n                                        </a>\n                                    </div>\n                                </div>\n\n                                <div className=\"col-auto\">\n                                    <button className=\"btn btn-icon btn-primary rounded-circle ms-5\" onClick={() => setMessage()}>\n                                        <FiSend />\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n\n                </div>\n\n            </div>\n        </main>\n    )\n}\n\nexport default ChatContent\n","import React from 'react'\nimport { FiSearch } from 'react-icons/fi'\nimport './ChatMembers.css'\nimport moment from 'moment';\n\n\nconst ChatMembers = ({ users, setActiveUser, activeUser }) => {\n  return (\n    <aside className=\"chat-members bg-light\">\n      <div className=\"tab-content h-100\">\n        <div className=\"tab-pane fade h-100 show active\">\n          <div className=\"d-flex flex-column h-100 position-relative\">\n            <div className=\"hide-scrollbar\">\n\n              <div className=\"container py-8\">\n\n                <div className=\"mb-4\">\n                  <h2 className=\"fw-bold m-0\">Chats</h2>\n                </div>\n\n\n                <div className=\"mb-6\">\n                  <form action=\"#\">\n                    <div className=\"input-group\">\n                      <div className=\"input-group-text\">\n                        <FiSearch style={{ fontSize: 20 }} />\n                      </div>\n\n                      <input type=\"text\" className=\"form-control form-control-lg ps-4\" placeholder=\"Search messages or users\" aria-label=\"Search for messages or users...\" />\n                    </div>\n                  </form>\n                </div>\n\n\n                <div className=\"card-list\">\n\n                  {\n                    users.length > 0 && users.map(q => (\n                      <a className=\"card border-0 text-reset\" key={q?._id} onClick={() => setActiveUser(q)}\n                        style={{cursor: 'pointer', backgroundColor: activeUser?._id === q?._id ? '#f6f6f6' : '#fff' }}>\n                        <div className=\"card-body\">\n                          <div className=\"row gx-5\">\n                            <div className=\"col-auto\">\n                              <div className=\"avatar avatar-online\">\n                                <span className=\"avatar-text bg-primary\">J</span>\n\n                              </div>\n                            </div>\n\n                            <div className=\"col\">\n                              <div className=\"d-flex align-items-center mb-3\">\n                                <h5 className=\"me-auto mb-0\">{q?.user?.name}</h5>\n                                <span className=\"text-muted extra-small ms-2\">{q?.messages?.length > 0 ? moment(q?.messages[0]?.date).fromNow() : ''}</span>\n                              </div>\n\n                              <div className=\"d-flex align-items-center\">\n                                <div className=\"line-clamp me-auto\">\n                                  {q?.messages?.length > 0 ? q?.messages[0]?.message : ''}\n                                </div>\n\n                                {/* <div className=\"badge badge-circle bg-primary ms-5\">\n                              <span>3</span>\n                            </div> */}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n\n                      </a>\n                    ))\n                  }\n\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </aside>\n  )\n}\n\nexport default ChatMembers\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport ChatContent from './ChatContent/ChatContent'\nimport ChatMembers from './ChatMembers/ChatMembers'\nimport './Chat.css'\nimport moment from 'moment';\n\n\nimport { useLocation } from 'react-router-dom';\nimport UserService from '../../../../Services/user.service';\nimport { socket } from '../../../../App';\n\nconst mesageHandler = (users, setUsers, setActiveUser, activeUser, obj, getConvs) => {\n    if(users.some(u => u?._id === obj?._id)) {\n        console.log(activeUser)\n        setUsers(users.map(u => u?._id === obj?._id ? ({ ...u, messages: [...u?.messages, obj] }) : u));\n        if (activeUser != '' && activeUser?._id === obj?._id) {\n            setActiveUser({\n                ...activeUser,\n                messages: [...activeUser?.messages, obj]\n            })\n        }\n    }else {\n    //    setUsers([...users, {\n    //        _id: obj?._id,\n    //        users: [obj?.from, obj?.to],\n    //        messages: [obj]\n    //    }])\n    getConvs();\n    }\n    console.log(obj, activeUser)\n}\n\n\nconst Chat = () => {\n\n    const location = useLocation();\n    const [users, setUsers] = useState([]);\n    const [activeUser, setActiveUser] = useState('');\n    const [message, setMessage] = useState('');\n    const getConvs = async () => {\n        try {\n            const res = await UserService.getConvs();\n            setUsers(res?.data);\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const activeUserRef = useRef(activeUser);\n   useEffect(() => {\n        activeUserRef.current = activeUser;\n    });\n    const usersRef = useRef(users);\n    useEffect(() => {\n         usersRef.current = users;\n     });\n\n\n    useEffect(() => { \n        getConvs();\n        const handler = (obj) => mesageHandler(usersRef.current, setUsers, setActiveUser, activeUserRef.current, obj, getConvs)\n        socket.on('message', (obj) => {\n            handler(obj)\n        });\n        return () => {\n          socket.off('message', handler);\n        }\n    }, []);\n\n    \n\n\n\n    const sendMessage = async (e = null) => {\n        if (e) {\n            e.preventDefault();\n        }\n        if(message) {\n        try {\n            console.log(activeUser)\n            socket.emit('sendMessage', {\n                id: activeUser?._id,\n                to: activeUser?.user?._id,\n                message\n            });\n            setMessage('');\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    }\n    return (\n        <div className='row d-flex m-0'>\n            <div className='col-md-4 p-0'>\n            <ChatMembers users={users} setActiveUser={setActiveUser} activeUser={activeUser} />\n            </div>\n            <div className='col-md-8 p-0'>\n                {\n                    activeUser != '' && (\n                        <ChatContent sendMessage={sendMessage} message={message} setMessage={setMessage} activeUser={activeUser} />\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"],"names":["activeUser","sendMessage","message","setMessage","useState","showEmojis","setShowEmojis","useEffect","className","style","height","borderBottom","user","name","paddingBottom","messages","length","map","q","from","_id","src","alt","moment","date","fromNow","id","background","border","placeholder","rows","onChange","e","target","value","onKeyPress","event","key","position","fontSize","onClick","title","emoji","native","onSelect","bottom","right","zIndex","users","setActiveUser","action","type","cursor","backgroundColor","useLocation","setUsers","getConvs","UserService","res","data","console","log","activeUserRef","useRef","current","usersRef","handler","obj","some","u","mesageHandler","socket","preventDefault","to","error"],"sourceRoot":""}