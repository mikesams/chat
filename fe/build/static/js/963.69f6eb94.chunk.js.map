{"version":3,"file":"static/js/963.69f6eb94.chunk.js","mappings":"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","sources":["Modules/Dashboard/Auth/LoginScreen/LoginScreen.js","Services/auth.service.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './LoginScreen.css';\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport AuthService from '../../../../Services/auth.service';\nimport TokenService from '../../../../Services/token.service';\nimport { addActions } from '../../../../Store/features/user.slice';\nimport { useDispatch } from 'react-redux';\nimport { socket } from '../../../../App'\n\nconst LoginScreen = () => {\n\n    const { register, handleSubmit, formState: { errors }, setError } = useForm();\n    const [showPassword, setToShowPassword] = useState(false);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const save = async (data) => {\n        console.log(data);\n        try {\n           const res = await AuthService.login(data);\n           dispatch(addActions(res?.actions || []));\n           console.log(res);\n           socket.emit('user', {id:res.id})\n           navigate('/app');\n        } catch (error) {\n            console.log(error);\n            if (error?.response?.status === 400) {\n                setError('email', {\n                    message: error?.response?.data?.message\n                }, {\n                    shouldFocus: true\n                })\n            }\n        }\n    }\n\n    return (\n        <div className=\"d-flex align-items-center bg-auth border-top border-top-2 border-primary\" style={{ width: '100%', height: '100vh' }}>\n            <div className=\"container\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col-12 col-md-6 offset-xl-2 offset-md-1 order-md-2 mb-5 mb-md-0\">\n                        <div className=\"text-center\">\n                            <img src='/assets/img/4826435.jpg' alt=\"...\" className=\"img-fluid\" />\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-5 col-xl-4 order-md-1 my-5\">\n                    <a className=\"masthead-brand d-flex justify-content-center\" onClick={() => navigate('/home')}>\n                            <img style={{ width: '270px', marginTop: '-15px', textAlign: 'center', marginBottom: '50px' }} src=\"/assets/img/logo.jpeg\" alt=\"ptc\" />\n                        </a>\n                        <h1 className=\"display-4 text-center mb-3\">\n                            Sign in\n                        </h1>\n                        <p className=\"text-muted text-center mb-5\">\n                            Access to your dashboard.\n                        </p>\n                        <form onSubmit={handleSubmit(save)}>\n                            <div className=\"form-group\">\n\n                                <label className=\"form-label\">\n                                    Email Address\n                                </label>\n                                <input type=\"text\"\n                                    {...register(\"email\", {\n                                        required: 'Required Input', pattern: {\n                                            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                            message: 'Invalid Email'\n                                        }\n                                    })}\n                                    className=\"form-control\" placeholder=\"name@address.com\" />\n                                {\n                                    errors?.email && (\n                                        <small className='text-danger mt-3 ms-3'>{errors?.email?.message}</small>\n                                    )\n                                }\n\n                            </div>\n\n                            <div className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <label className=\"form-label\">\n                                            Password\n                                        </label>\n\n                                    </div>\n                                    <div className=\"col-auto\">\n                                        <a href=\"password-reset-cover.html\" className=\"form-text small text-muted\">\n                                            Forgot password?\n                                        </a>\n\n                                    </div>\n                                </div>\n\n                                <div className=\"input-group input-group-merge\">\n\n                                    <input\n                                        {...register(\"password\", { required: 'Required Input', minLength: { value: 8, message: 'Minimum length of 8 characters required' } })}\n                                        className=\"form-control\" type={showPassword ? 'text' : 'password'} placeholder=\"Enter your password\" />\n\n                                    <span className=\"input-group-text\" style={{ cursor: 'pointer' }} onClick={() => setToShowPassword(!showPassword)}>\n                                        {\n                                            showPassword ? (\n                                                <FaEyeSlash />\n                                            ) : (\n\n                                                <FaEye />\n                                            )\n                                        }\n                                    </span>\n\n                                </div>\n                                {\n                                    errors?.password && (\n                                        <small className='text-danger mt-3 ms-3'>{errors?.password?.message}</small>\n                                    )\n                                }\n                            </div>\n\n                            <button className=\"btn btn-lg w-100 btn-primary mb-3\" type='submit'>\n                                Sign in\n                            </button>\n\n                            <div className=\"text-center\">\n                                <small className=\"text-muted text-center\">\n                                    Don't have an account yet? <a onClick={() => navigate('/auth/signup')} style={{ textDecoration: 'underline', fontWeight: 600, cursor: 'pointer' }}>Sign up</a>.\n                                </small>\n                            </div>\n\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen\n","import api from \"./api\";\nimport TokenService from \"./token.service\";\n\nconst AuthService = {\n  login(data) {\n    return api\n      .post(\"/auth/login\", data)\n      .then(response => {\n        if (response.data.tokens) {\n          TokenService.setUser(response.data.tokens);\n        }\n        return response.data;\n      });\n  },\n\n  logout() {\n    TokenService.removeUser();\n  },\n\n  register(data) {\n    return api.post(\"/auth/register\", data)\n      .then(response => {\n        if (response.data.tokens) {\n          TokenService.setUser(response.data.tokens);\n        }\n        return response.data;\n      });\n  }\n}\n\nexport default AuthService;"],"names":["useForm","register","handleSubmit","errors","formState","setError","useState","showPassword","setToShowPassword","navigate","useNavigate","dispatch","useDispatch","save","data","console","log","AuthService","res","addActions","actions","socket","id","response","status","message","shouldFocus","className","style","width","height","src","alt","onClick","marginTop","textAlign","marginBottom","onSubmit","type","required","pattern","value","placeholder","email","href","minLength","cursor","password","textDecoration","fontWeight","login","api","then","tokens","TokenService","logout"],"sourceRoot":""}